package formularios;


import java.sql.SQLException;
import java.sql.Statement;
import bdados.Conexao;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Types;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.openide.util.Exceptions;

public class frmBugSelecao extends javax.swing.JDialog implements ListSelectionListener {

    private Conexao Conexao;
    private Statement Comando;
    private ResultSet Resultado;
    public String bugSelecionado;
    CallableStatement procComando;

    /** Creates new form frmBugSelecao */
    public frmBugSelecao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        Conexao = new Conexao();
        try {
            Comando = Conexao.conexao.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        preenchetblBUGS();
        ListSelectionModel selectionModel = tblBUGS.getSelectionModel();
        selectionModel.addListSelectionListener(this);
    }

    private void setbugSelecionado(String bugSelecionado) {
        this.bugSelecionado = bugSelecionado;
    }

    public String getbugSelecionado() {
        return this.bugSelecionado;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBUGS = new javax.swing.JTable();
        btnSelecionarBG_CODIGO = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblBUGS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Descrição", "Cód. Fonte"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBUGS);

        btnSelecionarBG_CODIGO.setText(org.openide.util.NbBundle.getMessage(frmBugSelecao.class, "frmBugSelecao.btnSelecionarBG_CODIGO.text")); // NOI18N
        btnSelecionarBG_CODIGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarBG_CODIGOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(btnSelecionarBG_CODIGO))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnSelecionarBG_CODIGO)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarBG_CODIGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarBG_CODIGOActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
}//GEN-LAST:event_btnSelecionarBG_CODIGOActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelecionarBG_CODIGO;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBUGS;
    // End of variables declaration//GEN-END:variables

    private void preenchetblBUGS()
    {

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblBUGS.getModel();
        model.getDataVector().removeAllElements();

        // Altera a largura das colunas da tabela de testes LSI
        int vColIndex = 0;
        TableColumn col = tblBUGS.getColumnModel().getColumn(vColIndex);
        int width = 15;
        col.setPreferredWidth(width);


        try {

            String Selecao = "";
            Selecao = "SELECT \"BG\".\"BG_CODIGO\", \"BG\".\"BG_DESCRICAO\", \"CF\".\"CF_DESCRICAO\" "
                    + " FROM \"BUGS\"  \"BG\", \"CODIGO_FONTE\"  \"CF\" WHERE "
                    + " (\"BG\".\"CF_CODIGO\" = \"CF\".\"CF_CODIGO\") AND (\"BG\".\"CF_CODIGO\"<>0) "
                    + " ORDER BY \"BG\".\"BG_CODIGO\" DESC";
            Comando.executeQuery(Selecao);
            Resultado = Comando.getResultSet();

            while (Resultado.next()) {
                model.insertRow(0, new Object[]{Resultado.getString(1), Resultado.getString(2), Resultado.getString(3)});
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception");
            e.printStackTrace();
        }
        try {
            this.Conexao.conexao.commit();
            this.Comando.close();
            this.Resultado.close();
            this.Conexao.conexao.close();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }




    }

    public void valueChanged(ListSelectionEvent event) {

        // See if this is a valid table selection
        if (event.getSource() == tblBUGS.getSelectionModel()
                && event.getFirstIndex() >= 0) {
            // Get the data model for this table
            TableModel model = (TableModel) tblBUGS.getModel();

            // Determine the selected item
            //String string = (String) model.getValueAt(tblBUGS.getSelectedRow(), tblBUGS.getSelectedColumn());
            this.setbugSelecionado((String) model.getValueAt(tblBUGS.getSelectedRow(), 0));

            // Display the selected item
        }

    }
}
