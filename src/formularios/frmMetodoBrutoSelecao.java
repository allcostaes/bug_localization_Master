package formularios;


import java.sql.SQLException;
import java.sql.Statement;
import bdados.Conexao;
import java.sql.ResultSet;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

public class frmMetodoBrutoSelecao extends javax.swing.JDialog implements ListSelectionListener {

    private Conexao Conexao;
    private Statement Comando;
    private ResultSet Resultado;
    private String CF_CODIGO;
    private String CF_DESCRICAO;
    private String MB_CODIGO;

    /** Creates new form frmMetodoBrutoSelecao */
    public frmMetodoBrutoSelecao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Conexao = new Conexao();
        try {
            Comando = Conexao.conexao.createStatement();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        ListSelectionModel selectionModel = tblMetodosBrutos.getSelectionModel();
        selectionModel.addListSelectionListener(this);

        // Altera a largura das colunas da tabela de testes LSI
        int vColIndex = 0;
        TableColumn col = tblMetodosBrutos.getColumnModel().getColumn(vColIndex);
        int width = 15;
        col.setPreferredWidth(width);

        // Altera a largura das colunas da tabela de testes LSI
        vColIndex = 1;
        col = tblMetodosBrutos.getColumnModel().getColumn(vColIndex);
        width = 50;
        col.setPreferredWidth(width);
    }

    public void setCF_CODIGO(String CF_CODIGO) {
        this.CF_CODIGO = CF_CODIGO;
    }

    public void setCF_DESCRICAO(String CF_DESCRICAO)
    {
        this.CF_DESCRICAO = CF_DESCRICAO;
    }


    private void setMB_CODIGO(String MB_CODIGO)
    {
        this.MB_CODIGO = MB_CODIGO;
    }


    private String getCF_CODIGO() {
        return this.CF_CODIGO;
    }

    private String getCF_DESCRICAO() {
        return this.CF_DESCRICAO;
    }

    public String getMB_CODIGO()
    {
        return this.MB_CODIGO;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMetodosBrutos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbxClasses = new javax.swing.JComboBox();
        btnPesquisar_MB = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCF_DESCRICAO = new javax.swing.JTextField();
        btnSelecionarMetodoBruto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.title")); // NOI18N

        tblMetodosBrutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Método"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMetodosBrutos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblMetodosBrutos);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.jLabel1.text")); // NOI18N

        cbxClasses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxClasses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxClassesItemStateChanged(evt);
            }
        });

        btnPesquisar_MB.setText(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.btnPesquisar_MB.text")); // NOI18N
        btnPesquisar_MB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisar_MBActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.jLabel2.text")); // NOI18N

        txtCF_DESCRICAO.setEditable(false);
        txtCF_DESCRICAO.setText(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.txtCF_DESCRICAO.text")); // NOI18N

        btnSelecionarMetodoBruto.setText(org.openide.util.NbBundle.getMessage(frmMetodoBrutoSelecao.class, "frmMetodoBrutoSelecao.btnSelecionarMetodoBruto.text")); // NOI18N
        btnSelecionarMetodoBruto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarMetodoBrutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCF_DESCRICAO)
                            .addComponent(cbxClasses, 0, 405, Short.MAX_VALUE))
                        .addGap(44, 44, 44)
                        .addComponent(btnPesquisar_MB)))
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(btnSelecionarMetodoBruto)
                .addContainerGap(583, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCF_DESCRICAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbxClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar_MB))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnSelecionarMetodoBruto)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisar_MBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisar_MBActionPerformed
        pesquisaMetodosBrutos();
    }//GEN-LAST:event_btnPesquisar_MBActionPerformed

    private void cbxClassesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxClassesItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbxClassesItemStateChanged

    private void btnSelecionarMetodoBrutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarMetodoBrutoActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnSelecionarMetodoBrutoActionPerformed


   public void preenchetxtCF_DESCRICAO()
    {
        txtCF_DESCRICAO.setText(this.getCF_DESCRICAO());
    }

    public void preenchecbxClasses()
    {
        try {
            String Selecao = "";
            Selecao = "SELECT DISTINCT  \"MB_CLASSE\" ";
            Selecao = Selecao + " FROM \"METODO_BRUTO\" WHERE ";
            Selecao = Selecao + " (\"CF_CODIGO\" =" + this.getCF_CODIGO();
            Selecao = Selecao + ") ORDER BY \"MB_CLASSE\" ";
            System.out.println(Selecao);

            Comando.execute(Selecao);
            Resultado = Comando.getResultSet();
            cbxClasses.removeAllItems();
            while (Resultado.next()) {
                cbxClasses.addItem(Resultado.getString(1));
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception");
            e.printStackTrace();
        }
    }

    private void pesquisaMetodosBrutos()
    {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblMetodosBrutos.getModel();
        model.getDataVector().removeAllElements();

        try {
            String Selecao = "";
            Selecao = "SELECT \"MB_CODIGO\", \"MB_METODO\" "
                    + " FROM \"METODO_BRUTO\" "
                    + " WHERE (\"CF_CODIGO\" =" + this.getCF_CODIGO() + ") AND (\"MB_CLASSE\"='" + cbxClasses.getSelectedItem().toString() + "') "
                    + "ORDER BY \"MB_METODO\" DESC";
            //System.out.println(Selecao);
            Comando.execute(Selecao);
            Resultado = Comando.getResultSet();
            while (Resultado.next()) {
                model.insertRow(0, new Object[]{Resultado.getString(1), Resultado.getString(2)});
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception");
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar_MB;
    private javax.swing.JButton btnSelecionarMetodoBruto;
    private javax.swing.JComboBox cbxClasses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMetodosBrutos;
    private javax.swing.JTextField txtCF_DESCRICAO;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent event) {

        // See if this is a valid table selection
        if (event.getSource() == tblMetodosBrutos.getSelectionModel()
                && event.getFirstIndex() >= 0) {
            // Get the data model for this table
            TableModel model = (TableModel) tblMetodosBrutos.getModel();

            // Determine the selected item
            //String string = (String) model.getValueAt(tblBUGS.getSelectedRow(), tblBUGS.getSelectedColumn());
            this.setMB_CODIGO((String) model.getValueAt(tblMetodosBrutos.getSelectedRow(), 0));

            // Display the selected item
        }

    }
}
